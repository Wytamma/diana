async function m(f,o,g,i=0,c=0){const h=[];for(let s=0;s<f.length;s++){const t=f[s],n=t.end-t.start+1,a=t.strand==="+"?t.start+Math.floor(i*n):t.start+Math.floor(c*n),d=t.strand==="+"?t.end-Math.floor(c*n):t.end-Math.floor(i*n);let u=0,r=0;for(let e=a;e<=d;e++)o[e]&&(u+=o[e],o[e]>0&&r++);const l=g.filter(e=>e>=a&&e<=d),M=l.length>0?r/l.length:0,S=r/(d-a+1);h.push({name:t.attributes.Name,start:t.start,end:t.end,strand:t.strand,readCount:u,insIndex:S,geneLength:n,insertCount:r,saturation:M,numberTASites:l.length}),s%100===0&&await new Promise(e=>setTimeout(e,0))}return h}export{m as g};
