import{B as v,c as g}from"./8Ozl1p9l.js";import{d as L,w as $}from"./BOext3aJ.js";function T(n){const c=[];return n.forEach((o,p)=>{o.forEach(l=>{const d=l+2,t=`${p}	${l}	${d}`;c.push(t)})}),c.join(`
`)}function U(){const n={raw:new Map},{subscribe:c,set:o,update:p}=$(n);return{subscribe:c,set:o,update:p,reset:()=>o(n),load:async l=>{const d=l.split(`
`);let t="",i="";const u=new Map;for(const s of d)s.startsWith(">")?(t&&i&&u.set(t,i),t=s.substring(1).split(/\s+/)[0].trim(),i=""):i+=s.trim();t&&i&&u.set(t,i);const b=new Map;u.forEach((s,q)=>{const w=[],f=s.toUpperCase();for(let r=0;r<f.length-1;r++)f[r]==="T"&&f[r+1]==="A"&&w.push(r);b.set(q,w)});const h=T(b),e=await new v([{tool:"tabix",version:"1.17",urlPrefix:`${window.location.origin}./tools/tabix`},{tool:"bgzip",version:"1.17",urlPrefix:`${window.location.origin}./tools/bgzip`}]),a=await e.mount([{name:"data.bed",data:h}]);await e.exec(`bgzip ${a[0]}`),await e.exec(`tabix -p bed ${a[0]}.gz`);const z=await e.fs.stat(`${a[0]}.gz`),x=await e.read({path:`${a[0]}.gz`,length:z.size}),m=g(x),S=await e.fs.stat(`${a[0]}.gz.tbi`),M=await e.read({path:`${a[0]}.gz.tbi`,length:S.size}),F=g(M);o({raw:b,url:m,indexUrl:F})}}}const A=U();L(A,n=>n);const C=$({locus:void 0});export{C as i,A as t};
